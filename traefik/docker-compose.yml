version: "3.3"

services:
  ################################################
  ####        Traefik Proxy Setup           #####
  ###############################################
  traefik:
    image: traefik:v2.0
    restart: unless-stopped
    container_name: traefik
    ports:
      - "80:80" # <== http
      - "8080:8080" # <== :8080 is where the dashboard runs on
      - "443:443" # <== https
    command:
    #### These are the CLI commands that will configure Traefik and tell it how to work! ####
      ## API Settings - https://docs.traefik.io/operations/api/, endpoints - https://docs.traefik.io/operations/api/#endpoints ##
      # - --api=true # <== Enabling insecure api, NOT RECOMMENDED FOR PRODUCTION
      - --api.dashboard=true # <== Enabling the dashboard to view services, middlewares, routers, etc...
      # - --api.debug=true # <== Enabling additional endpoints for debugging and profiling
      ## Log Settings (options: ERROR, DEBUG, PANIC, FATAL, WARN, INFO) - https://docs.traefik.io/observability/logs/ ##
      - --log.level=DEBUG # <== Setting the level of the logs from traefik
      ## Provider Settings - https://docs.traefik.io/providers/docker/#provider-configuration ##
      - --providers.docker=true # <== Enabling docker as the provider for traefik
      - --providers.docker.exposedbydefault=false # <== Don't expose every container to traefik, only expose enabled ones
      - --providers.file.filename=/dynamic.yaml # <== Referring to a dynamic configuration file
      - --providers.docker.network=web # <== Operate on the docker network named web
      ## Entrypoints Settings - https://docs.traefik.io/routing/entrypoints/#configuration ##
      - --entrypoints.web.address=:80 # <== Defining an entrypoint for port :80 named web
      - --entrypoints.web-secured.address=:443 # <== Defining an entrypoint for https on port :443 named web-secured
      ## Certificate Settings (Let's Encrypt) -  https://docs.traefik.io/https/acme/#configuration-examples ##
      - "--certificatesresolvers.resolver.acme.tlschallenge=true"
      # - "--certificatesresolvers.letsencrypt.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.resolver.acme.email=betalixt4@protonmail.com"
      - "--certificatesresolvers.resolver.acme.storage=/letsencrypt/acme.json"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # <== Volume for docker admin
      - ../../data/traefik/letsencrypt:/letsencrypt # <== Volume for docker admin
    networks:
      - web # <== Placing traefik on the network named web, to access containers on this network
    labels:
    #### Labels define the behavior and rules of the traefik proxy for this container ####
      - "traefik.enable=true" # <== Enable traefik on itself to view dashboard and assign subdomain to view it
      - "traefik.http.routers.traefik-api-http.rule=Host(`traefik.${DOCKER_BASE_DOMAIN}`)" # <== Setting the domain for the dashboard
      - "traefik.http.routers.traefik-api-http.entrypoints=web" # <== Defining the entrypoint for http, **ref: line 30
      - "traefik.http.routers.traefik-api-http.middlewares=https_redirect" # <== This is a middleware to redirect to https

      - "traefik.http.routers.traefik-api-https.rule=Host(`traefik.${DOCKER_BASE_DOMAIN}`)" # <== Setting the domain for the dashboard
      - "traefik.http.routers.traefik-api-https.entrypoints=web-secured"
      - "traefik.http.routers.traefik-api-https.tls=true"
      - "traefik.http.routers.traefik-api-https.service=api@internal" # <== Enabling the api to be a service to access
      - "traefik.http.routers.traefik-api-https.middlewares=auth"
      - "traefik.http.routers.traefik-api-https.tls.certresolver=resolver"
      - "traefik.http.middlewares.auth.basicauth.users=${DOCKER_TRAEFIK_BASICAUTH}"

      - "traefik.http.middlewares.https_redirect.redirectscheme.scheme=https"
      - "traefik.http.middlewares.https_redirect.redirectscheme.permanent=true"

  whoami:
    image: containous/whoami
    networks:
      - web
    labels:
      - "traefik.enable=true"
      
      - "traefik.http.routers.whoami_http.rule=Host(`whoami.${DOCKER_BASE_DOMAIN}`)"
      - "traefik.http.routers.whoami_http.entrypoints=web"
      - "traefik.http.routers.whoami_http.middlewares=redirect-https-whoami"

      - "traefik.http.middlewares.redirect-https-whoami.redirectscheme.scheme=https"

      - "traefik.http.routers.whoami_https.rule=Host(`whoami.${DOCKER_BASE_DOMAIN}`)"
      - "traefik.http.routers.whoami_https.entrypoints=web-secured"
      - "traefik.http.routers.whoami_https.tls=true"
      - "traefik.http.routers.whoami_https.tls.certresolver=resolver"
      
      - "traefik.http.services.whoami.loadbalancer.server.port=80"

networks:
  web:
    external: true